{"ast":null,"code":"var _jsxFileName = \"/home/jovana/Desktop/tic-tac-toe/src/TicTacToe.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState([['', '', ''], ['', '', ''], ['', '', '']]);\n  const [currentPlayer, setCurrentPlayer] = useState(\"X\");\n  const [gameWon, setGameWon] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const handleClick = (row, col) => {\n    if (gameWon || gameOver) {\n      return;\n    }\n    const updatedBoard = board.slice();\n    updatedBoard[row][col] = currentPlayer;\n    setBoard(updatedBoard);\n    setCurrentPlayer(currentPlayer === \"X\" ? \"O\" : \"X\");\n    checkForWinner();\n  };\n  const checkForWinner = () => {\n    // check rows\n    for (let i = 0; i < 3; i++) {\n      if (board[i][0] === board[i][1] && board[i][1] === board[i][2] && board[i][0] !== '') {\n        setGameWon(true);\n        return;\n      }\n    }\n\n    // check columns\n    for (let i = 0; i < 3; i++) {\n      if (board[0][i] === board[1][i] && board[1][i] === board[2][i] && board[0][i] !== '') {\n        setGameWon(true);\n        return;\n      }\n    }\n\n    // check diagonals\n    if (board[0][0] === board[1][1] && board[1][1] === board[2][2] && board[0][0] !== '') {\n      setGameWon(true);\n      return;\n    }\n    if (board[0][2] === board[1][1] && board[1][1] === board[2][0] && board[0][2] !== '') {\n      setGameWon(true);\n      return;\n    }\n    if (!board.flat().includes('')) {\n      setGameOver(true);\n    }\n  };\n  const resetGame = () => {\n    setBoard([['', '', ''], ['', '', ''], ['', '', '']]);\n    setCurrentPlayer(\"X\");\n    setGameWon(false);\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: gameWon ? \"Player \" + `${currentPlayer === \"O\" ? \"X\" : \"O\"}` + \" won!\" : gameOver ? \"Game Over\" : \"Player \" + currentPlayer + \"'s turn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cell\",\n      children: board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((col, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(i, j),\n          children: col\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"JsbViXCd8Dk97s54eZijPT0Elg8=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["logo","React","useState","TicTacToe","board","setBoard","currentPlayer","setCurrentPlayer","gameWon","setGameWon","gameOver","setGameOver","handleClick","row","col","updatedBoard","slice","checkForWinner","i","flat","includes","resetGame","map","j"],"sources":["/home/jovana/Desktop/tic-tac-toe/src/TicTacToe.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useState } from 'react';\n\nconst TicTacToe = () => {\n  const [board, setBoard] = useState([\n    ['', '', ''],\n    ['', '', ''],\n    ['', '', ''],\n  ]);\n  const [currentPlayer, setCurrentPlayer] = useState(\"X\");\n  const [gameWon, setGameWon] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  const handleClick = (row, col) => {\n    if (gameWon || gameOver) {\n      return;\n    }\n    const updatedBoard = board.slice();\n    updatedBoard[row][col] = currentPlayer;\n    setBoard(updatedBoard);\n    setCurrentPlayer(currentPlayer === \"X\" ? \"O\" : \"X\");\n    checkForWinner();\n  }\n\n  const checkForWinner = () => {\n    // check rows\n    for (let i = 0; i < 3; i++) {\n      if (board[i][0] === board[i][1] && board[i][1] === board[i][2] && board[i][0] !== '') {\n        setGameWon(true);\n        return;\n      }\n    }\n\n    // check columns\n    for (let i = 0; i < 3; i++) {\n      if (board[0][i] === board[1][i] && board[1][i] === board[2][i] && board[0][i] !== '') {\n        setGameWon(true);\n        return;\n      }\n    }\n\n    // check diagonals\n    if (board[0][0] === board[1][1] && board[1][1] === board[2][2] && board[0][0] !== '') {\n      setGameWon(true);\n      return;\n    }\n    if (board[0][2] === board[1][1] && board[1][1] === board[2][0] && board[0][2] !== '') {\n      setGameWon(true);\n      return;\n    }\n    if (!board.flat().includes('')) {\n      setGameOver(true);\n    }\n  }\n\n  const resetGame = () => {\n    setBoard([\n      ['', '', ''],\n      ['', '', ''],\n      ['', '', ''],\n    ]);\n    setCurrentPlayer(\"X\");\n    setGameWon(false);\n    setGameOver(false);\n  }\n\n  return (\n    <div className=\"tic-tac-toe\">\n      <div className={\"message\"}>\n        {gameWon ? \"Player \" + `${currentPlayer === \"O\" ? \"X\" : \"O\"}` + \" won!\" : gameOver ? \"Game Over\" : \"Player \" + currentPlayer + \"'s turn\"}\n      </div>\n      <div className={\"cell\"}>\n        {board.map((row, i) => (\n          <div key={i} >\n            {row.map((col, j) => (\n              <button key={j} onClick={() => handleClick(i, j)}>\n                {col}\n              </button>\n            ))}\n          </div>\n        ))}\n      </div>\n      <button onClick={resetGame}>Reset Game</button>\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}